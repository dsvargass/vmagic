(window["webpackJsonpvmagic-docs"]=window["webpackJsonpvmagic-docs"]||[]).push([[0],{19:function(e,a,t){e.exports=t.p+"static/media/logo.72cfda8f.png"},23:function(e,a,t){e.exports=t(38)},28:function(e,a,t){},32:function(e,a,t){},33:function(e,a,t){},38:function(e,a,t){"use strict";t.r(a);var n=t(0),r=t.n(n),s=t(18),o=t.n(s),l=(t(28),t(4)),c=t(5),i=t(7),m=t(6),d=t(8),p=(t(29),t(30),t(22)),u=t(9),h=(t(32),t(33),t(19)),E=t.n(h),g=function(e){function a(e){var t;return Object(l.a)(this,a),(t=Object(i.a)(this,Object(m.a)(a).call(this,e))).state={menu:[{name:"MySQL",href:"#/"},{name:"Postgres",href:"#/pgsql"}]},t}return Object(d.a)(a,e),Object(c.a)(a,[{key:"render",value:function(){var e=this;return r.a.createElement("nav",{className:"navbar navbar-expand-lg navbar-light bgDark"},r.a.createElement("div",{className:"container"},r.a.createElement("a",{rel:"noopener noreferrer",className:"navbar-brand",href:"#/"},r.a.createElement("img",{src:E.a,width:"50",height:"50",alt:"logo vmagic"})),r.a.createElement("button",{className:"navbar-toggler",type:"button","data-toggle":"collapse","data-target":"#navbarNav","aria-controls":"navbarNav","aria-expanded":"false","aria-label":"Toggle navigation"},r.a.createElement("span",{className:"navbar-toggler-icon"})),r.a.createElement("div",{className:"collapse navbar-collapse",id:"navbarNav"},r.a.createElement("ul",{className:"navbar-nav"},this.state.menu.map(function(a,t){var n="nav-item";return e.props.page===t&&(n+=" border-bottom"),r.a.createElement("li",{key:t,className:n},r.a.createElement("a",{className:"nav-link text-white",rel:"noopener noreferrer",href:a.href},a.name))})))))}}]),a}(n.Component),b=t(1),f=t.n(b),x=t(11),N=function(e){function a(e){var t;return Object(l.a)(this,a),(t=Object(i.a)(this,Object(m.a)(a).call(this,e))).state={},t}return Object(d.a)(a,e),Object(c.a)(a,[{key:"render",value:function(){return r.a.createElement("div",{id:"home"},r.a.createElement(g,{page:0}),r.a.createElement("div",{className:"container"},r.a.createElement("ul",{className:"list-group positionList"},r.a.createElement(f.a,{href:"#instalation",className:"list-group-item list-group-item-action"},"Instala\xe7\xe3o"),r.a.createElement(f.a,{href:"#structure",className:"list-group-item list-group-item-action"},"Estrutura do projeto"),r.a.createElement(f.a,{href:"#config",className:"list-group-item list-group-item-action"},"Configura\xe7\xe3o"),r.a.createElement(f.a,{href:"#controllerFindBy",className:"list-group-item list-group-item-action"},"Controller"),r.a.createElement(f.a,{href:"#controllerFindBy",className:"ml-2 list-group-item list-group-item-action text-secondary",style:{fontSize:15}},"M\xe9todos"),r.a.createElement(f.a,{href:"#controllerFindBy",className:"ml-2 list-group-item list-group-item-action"},"FindBy()"),r.a.createElement(f.a,{href:"#controllerFindAll",className:"ml-2 list-group-item list-group-item-action"},"FindAll()"),r.a.createElement(f.a,{href:"#controllerFindAllParams",className:"ml-2 list-group-item list-group-item-action"},"FindAll(parametros)"),r.a.createElement(f.a,{href:"#controllerFindAllJoin",className:"ml-2 list-group-item list-group-item-action"},"FindAll() com join"),r.a.createElement(f.a,{href:"#controllerSave",className:"ml-2 list-group-item list-group-item-action"},"Save()"),r.a.createElement(f.a,{href:"#controllerUpdate",className:"ml-2 list-group-item list-group-item-action"},"Update()"),r.a.createElement(f.a,{href:"#controllerDelete",className:"ml-2 list-group-item list-group-item-action"},"Delete()"),r.a.createElement(f.a,{href:"#model",className:"list-group-item list-group-item-action"},"Model")),r.a.createElement("div",{className:"margin"},r.a.createElement("h1",{className:"text-secondary"},"MySql"),r.a.createElement("div",{id:"instalation"},r.a.createElement("h5",null,"Instalando o vMagic"),r.a.createElement("p",{className:"text-secondary"},"Instale-o da seguinte maneira usando o npm"),r.a.createElement("p",{className:"text-secondary font-weight-bold"},"$ npm install -g vmagic-cli"),r.a.createElement("h5",{className:"mt-2"},"Depois de instalado, voc\xea pode usar o comando vmagic-cli new para criar um novo projeto."),r.a.createElement("p",{className:"text-secondary"},"Por exemplo, para criar um novo projeto chamado emvApi, basta executar:"),r.a.createElement("p",{className:"text-secondary font-weight-bold"},"$ vmagic-cli new emvApi")),r.a.createElement("div",{id:"config"},r.a.createElement("h5",null,"Configurando conex\xe3o MySQL"),r.a.createElement("p",{className:"text-secondary"},"Editar o arquivo: src/Config/core.json"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        {\n                                            "dataSources" : {\n                                                "default" : {\n                                                    "dataSource" : "MySQL",\n                                                    "host" : "localhost",\n                                                    "port" : 3306,\n                                                    "user" : "root",\n                                                    "password" : "",\n                                                    "database" : "",\n                                                    "connectionLimit" : 50 //Caso n\xe3o informado o padr\xe3o ser\xe1 10\n                                                },\n                                                "test" : {\n                                                    "dataSource" : "MySQL",\n                                                    "host" : "localhost",\n                                                    "port" : 3306,\n                                                    "user" : "root",\n                                                    "password" : "",\n                                                    "database" : "",\n                                                    "connectionLimit" : 50 //Caso n\xe3o informado o padr\xe3o ser\xe1 10\n                                                }\n                                            }\n                                        }\n                                    '))),r.a.createElement("div",{id:"structure"},r.a.createElement("h5",null,"Ap\xf3s criar um novo projeto, vir\xe1 com a seguinte estrutura."),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},"\n                                        \u251c\u2500\u2500 NomeProjeto/\n                                            \u251c\u2500\u2500 src/\n                                                \u251c\u2500\u2500 Config/\n                                                    \u251c\u2500\u2500Core.json\n                                                \u251c\u2500\u2500 Controller/\n                                                    \u251c\u2500\u2500ExamplesControllerTest.js\n                                                    \u251c\u2500\u2500AppController.js\n                                                \u2514\u2500\u2500 Model/\n                                                    \u251c\u2500\u2500Example.js\n                                            \u251c\u2500\u2500 test/\n                                                \u251c\u2500\u2500 Controller/\n                                                    \u251c\u2500\u2500ExamplesControllerTest.js\n                                            \u251c\u2500\u2500 Gruntfile.js\n                                            \u251c\u2500\u2500 init.js\n                                            \u2514\u2500\u2500 package.json\n                                    "))),r.a.createElement("div",{className:"mt-5",id:"controllerFindBy"},r.a.createElement("h3",{className:"text-secondary font-weight-bold"},"M\xe9todos da controller"),r.a.createElement("h5",null,"FindBy()"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para buscar por um ou mais campos da base de dados"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},"\n                                        'use strict';\n                                        const AppController = require('./AppController');\n                                        \n                                        class ExamplesController extends AppController {\n                                        \n                                            init() {\n                                                this.model('Example');\n                                            }\n                                            //Fun\xe7\xe3o a ser chamada em sua requisi\xe7\xe3o do tipo get - http://127.0.0.1:5555/Examples?id=1\n                                            //Caso o nome de sua fun\xe7\xe3o for diferente de get() ent\xe3o dever\xe1 passar o nome da fun\xe7\xe3o junto a chamada.\n                                            Ex: http://127.0.0.1:5555/Examples/NomeFuncao/?id=1\n\n                                            get(callback) {\n                                                this.Example.findBy({\"id\": this.query.id}).\n                                                    //Este m\xe9todo corresponde ao seguinte sql:\n                                                    // SELECT * FROM Example WHERE id = 1;\n                                                    then(res => {\n                                                        this.logger.info(res.rows);\n                                                        //Retorna a resposta para o front end.\n                                                        callback(this.responseSuccess(res.rows));\n                                                    }).\n                                                    catch(err => {\n                                                        this.statusCode = 500;\n                                                        this.logger.error(err.message)\n                                                        callback(this.responseError(\"Erro\", err.message, this.statusCode));\n                                                    });\n                                            }\n                                        }\n\n                                        module.exports = ExamplesController;\n                                    "))),r.a.createElement("div",{id:"controllerFindAll"},r.a.createElement("h5",null,"FindAll()"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para buscar todos os registros da base de dados"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        get(callback) {\n                                            this.Example.findAll().\n                                                //Este m\xe9todo corresponde ao seguinte sql:\n                                                // SELECT * FROM Example;\n                                                then(res => {\n                                                    this.logger.info(res.rows);\n                                                    //Retorna a resposta para o front end.\n                                                    callback(this.responseSuccess(res.rows));\n                                                }).\n                                                catch(err => {\n                                                    this.statusCode = 500;\n                                                    this.logger.error(err.message);\n                                                    callback(this.responseError("Erro", err.message, this.statusCode));\n                                                });\n                                        }\n                                    '))),r.a.createElement("div",{id:"controllerFindAllParams"},r.a.createElement("h5",null,"FindAll(parametros)"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para buscar todos os registros da base de dados"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        get(callback) {\n                                            //Com parametros;\n                                            const params = {\n                                                "conditions": [{\n                                                    "user_id": this.query.user_id\n                                                },{\n                                                    "name": this.query.name,\n                                                }]\n                                            }\n\n                                            //Fazendo buscas pelo nome;\n                                            const params = {\n                                                "conditions": [{\n                                                    "name": \'%\' + this.query.name + \'%\',\n                                                    "operation": "ILIKE"\n                                                }],\n                                            }\n\n                                            //Order, Group, Limit;\n                                            const params = {\n                                                "conditions": [{\n                                                    "name": \'%\' + this.query.name + \'%\',\n                                                    "operation": "ILIKE"\n                                                }],\n                                                "order": ["name", "id"],\n                                                "group": ["name"],\n                                                "limit": "10",\n                                            }\n\n                                            this.Example.findAll(params).\n                                                then(res => {\n                                                    this.logger.info(res.rows);\n                                                    //Retorna a resposta para o front end.\n                                                    callback(this.responseSuccess(res.rows));\n                                                }).\n                                                catch(err => {\n                                                    this.statusCode = 500;\n                                                    this.logger.error(err.message);\n                                                    callback(this.responseError("Erro", err.message, this.statusCode));\n                                                });\n                                        }\n                                    '))),r.a.createElement("div",{id:"controllerFindAllParams"},r.a.createElement("h5",null,"FindAll com join"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para buscar os registros da base de dados com join"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        get(callback) {\n                                            const params = {\n                                                "conditions": {\n                                                    "user_id": this.query.user_id\n                                                },\n                                                "join": {\n                                                    //Tipo do join(INNER, LEFT);\n                                                    "INNER": {\n                                                        "table": "tableexample",\n                                                        "on": "tableexample.example_id = example.id"\n                                                    }\n                                                },\n                                                "fields": ["tableexample.*", "example.id AS example_id, example.name"]\n                                            }\n\n                                            this.Example.findAll(params).\n                                                then(res => {\n                                                    this.logger.info(res.rows);\n                                                    //Retorna a resposta para o front end.\n                                                    callback(this.responseSuccess(res.rows));\n                                                }).\n                                                catch(err => {\n                                                    this.statusCode = 500;\n                                                    this.logger.error(err.message);\n                                                    callback(this.responseError("Erro", err.message, this.statusCode));\n                                                });\n                                        }\n                                    '))),r.a.createElement("div",{id:"controllerSave"},r.a.createElement("h5",null,"Save()"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para salvar um registro da base de dados"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        post(callback) {\n                                            this.Example.Save(this.payload).\n                                                then(res => {\n                                                    this.logger.info(res.rows);\n                                                    //Retorna a resposta para o front end.\n                                                    callback(this.responseSuccess(res.rows));\n                                                }).\n                                                catch(err => {\n                                                    this.statusCode = 500;\n                                                    this.logger.error(err.message);\n                                                    callback(this.responseError("Erro", err.message, this.statusCode));\n                                                });\n                                        }\n                                    '))),r.a.createElement("div",{id:"controllerSave"},r.a.createElement("h5",null,"Update()"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para buscar atualizar um registro da base de dados"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        put(callback) {\n                                            this.Example.Update(this.payload, {"id": this.id}).\n                                                then(res => {\n                                                    this.logger.info(res.rows);\n                                                    //Retorna a resposta para o front end.\n                                                    callback(this.responseSuccess(res.rows));\n                                                }).\n                                                catch(err => {\n                                                    this.statusCode = 500;\n                                                    this.logger.error(err.message);\n                                                    callback(this.responseError("Erro", err.message, this.statusCode));\n                                                });\n                                        }\n                                    '))),r.a.createElement("div",{id:"controllerDelete"},r.a.createElement("h5",null,"Delete()"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para excluir um registro da base de dados"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        delete(callback) {\n                                            this.Example.Delete({"id": this.payload.id}).\n                                                then(res => {\n                                                    this.logger.info(res.rows);\n                                                    //Retorna a resposta para o front end.\n                                                    callback(this.responseSuccess(res.rows));\n                                                }).\n                                                catch(err => {\n                                                    this.statusCode = 500;\n                                                    this.logger.error(err.message);\n                                                    callback(this.responseError("Erro", err.message, this.statusCode));\n                                                });\n                                        }\n                                    '))),r.a.createElement("div",{id:"model"},r.a.createElement("h5",null,"Sobrescrevendo o m\xe9todo findAll()"),r.a.createElement("p",{className:"text-secondary"},"Na model pode sobrescrever algum m\xe9todo pad\xe3o ou criar um novo."),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},"\n                                        'use strict';\n                                        var AppModel = require('vmagic/AppModel');\n                                        \n                                        class Example extends AppModel {\n                                            init() {\n                                                this.useTable = 'example';\n                                                //\xc9 necess\xe1rio que instancie o component Mysql para poder sobrescrever o m\xe9todo.\n                                                this.mysql = this.component('MySQL');\n                                            }\n\n                                            findAll() {\n                                                const that = this;\n                                        \n                                                return new Promise((resolve, reject) => {\n                                                    const sql = \"select * from example\";\n                                        \n                                                    this.mysql.connect().\n                                                        then(connection => {\n                                                            connection.query(\n                                                                sql, [],\n                                                                function (err, res) {\n                                                                    that.mysql.close(connection);\n                                                                    if (err) {\n                                                                        reject(err);\n                                                                    } else {\n                                                                        resolve(res);\n                                                                    }\n                                                                }\n                                                            );\n                                                        }).\n                                                        catch(err => {\n                                                            reject(err);\n                                                        });\n                                                });\n                                            }\n\n                                        }\n\n                                        module.exports = Example;\n                                    ")),r.a.createElement("h5",null,"Sobrescrevendo o m\xe9todo findBy()"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        findBy(id) {\n                                            const that = this;\n\n                                            return new Promise((resolve, reject) => {\n                                                const sql = "SELECT * FROM example WHERE id = $1";\n                                    \n                                                this.mysql.connect().\n                                                    then(connection => {\n                                                        connection.query(\n                                                            sql, [id],\n                                                            function (err, res) {\n                                                                that.mysql.close(connection);\n                                                                if (err) {\n                                                                    reject(err);\n                                                                } else {\n                                                                    resolve(res);\n                                                                }\n                                                            }\n                                                        );\n                                                    }).\n                                                    catch(err => {\n                                                        reject(err);\n                                                    });\n                                            });\n                                        }\n                                    ')))),r.a.createElement(f.a,{href:"#home",className:"btn btn-secondary backToTop"},r.a.createElement(x.a,{size:50,color:"#220052",title:"Voltar ao topo"}))))}}]),a}(n.Component),v=function(e){function a(e){var t;return Object(l.a)(this,a),(t=Object(i.a)(this,Object(m.a)(a).call(this,e))).state={},t}return Object(d.a)(a,e),Object(c.a)(a,[{key:"render",value:function(){return r.a.createElement("div",{id:"home"},r.a.createElement(g,{page:1}),r.a.createElement("div",{className:"container"},r.a.createElement("ul",{className:"list-group positionList"},r.a.createElement(f.a,{href:"#instalation",className:"list-group-item list-group-item-action"},"Instala\xe7\xe3o"),r.a.createElement(f.a,{href:"#structure",className:"list-group-item list-group-item-action"},"Estrutura do projeto"),r.a.createElement(f.a,{href:"#config",className:"list-group-item list-group-item-action"},"Configura\xe7\xe3o"),r.a.createElement(f.a,{href:"#controllerFindBy",className:"list-group-item list-group-item-action"},"Controller"),r.a.createElement(f.a,{href:"#controllerFindBy",className:"ml-2 list-group-item list-group-item-action text-secondary",style:{fontSize:15}},"M\xe9todos"),r.a.createElement(f.a,{href:"#controllerFindBy",className:"ml-2 list-group-item list-group-item-action"},"FindBy()"),r.a.createElement(f.a,{href:"#controllerFindAll",className:"ml-2 list-group-item list-group-item-action"},"FindAll()"),r.a.createElement(f.a,{href:"#controllerFindAllParams",className:"ml-2 list-group-item list-group-item-action"},"FindAll(parametros)"),r.a.createElement(f.a,{href:"#controllerFindAllJoin",className:"ml-2 list-group-item list-group-item-action"},"FindAll() com join"),r.a.createElement(f.a,{href:"#controllerSave",className:"ml-2 list-group-item list-group-item-action"},"Save()"),r.a.createElement(f.a,{href:"#controllerUpdate",className:"ml-2 list-group-item list-group-item-action"},"Update()"),r.a.createElement(f.a,{href:"#controllerDelete",className:"ml-2 list-group-item list-group-item-action"},"Delete()"),r.a.createElement(f.a,{href:"#model",className:"list-group-item list-group-item-action"},"Model")),r.a.createElement("div",{className:"margin"},r.a.createElement("h1",{className:"text-secondary"},"Postgres"),r.a.createElement("div",{id:"instalation"},r.a.createElement("h5",null,"Instalando o vMagic"),r.a.createElement("p",{className:"text-secondary"},"Instale-o da seguinte maneira usando o npm"),r.a.createElement("p",{className:"text-secondary font-weight-bold"},"$ npm install -g vmagic-cli"),r.a.createElement("h5",{className:"mt-2"},"Depois de instalado, voc\xea pode usar o comando vmagic-cli new para criar um novo projeto."),r.a.createElement("p",{className:"text-secondary"},"Por exemplo, para criar um novo projeto chamado emvApi, basta executar:"),r.a.createElement("p",{className:"text-secondary font-weight-bold"},"$ vmagic-cli new emvApi")),r.a.createElement("div",{id:"config"},r.a.createElement("h5",null,"Configurando conex\xe3o Postgres"),r.a.createElement("p",{className:"text-secondary"},"Editar o arquivo: src/Config/core.json"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        {\n                                            "dataSources" : {\n                                                "default" : {\n                                                    "dataSource" : "PgSQL",\n                                                    "host" : "localhost",\n                                                    "port" : 3306,\n                                                    "user" : "root",\n                                                    "password" : "",\n                                                    "database" : "",\n                                                    "connectionLimit" : 50 //Caso n\xe3o informado o padr\xe3o ser\xe1 10\n                                                },\n                                                "test" : {\n                                                    "dataSource" : "PgSQL",\n                                                    "host" : "localhost",\n                                                    "port" : 3306,\n                                                    "user" : "root",\n                                                    "password" : "",\n                                                    "database" : "",\n                                                    "connectionLimit" : 50 //Caso n\xe3o informado o padr\xe3o ser\xe1 10\n                                                }\n                                            }\n                                        }\n                                    '))),r.a.createElement("div",{id:"structure"},r.a.createElement("h5",null,"Ap\xf3s criar um novo projeto, vir\xe1 com a seguinte estrutura."),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},"\n                                        \u251c\u2500\u2500 NomeProjeto/\n                                            \u251c\u2500\u2500 src/\n                                                \u251c\u2500\u2500 Config/\n                                                    \u251c\u2500\u2500Core.json\n                                                \u251c\u2500\u2500 Controller/\n                                                    \u251c\u2500\u2500ExamplesControllerTest.js\n                                                    \u251c\u2500\u2500AppController.js\n                                                \u2514\u2500\u2500 Model/\n                                                    \u251c\u2500\u2500Example.js\n                                            \u251c\u2500\u2500 test/\n                                                \u251c\u2500\u2500 Controller/\n                                                    \u251c\u2500\u2500ExamplesControllerTest.js\n                                            \u251c\u2500\u2500 Gruntfile.js\n                                            \u251c\u2500\u2500 init.js\n                                            \u2514\u2500\u2500 package.json\n                                    "))),r.a.createElement("div",{className:"mt-5",id:"controllerFindBy"},r.a.createElement("h3",{className:"text-secondary font-weight-bold"},"M\xe9todos da controller"),r.a.createElement("h5",null,"FindBy()"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para buscar por um ou mais campos da base de dados"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},"\n                                        'use strict';\n                                        const AppController = require('./AppController');\n                                        \n                                        class ExamplesController extends AppController {\n                                        \n                                            init() {\n                                                this.model('Example');\n                                            }\n                                            //Fun\xe7\xe3o a ser chamada em sua requisi\xe7\xe3o do tipo get - http://127.0.0.1:5555/Examples?id=1\n                                            //Caso o nome de sua fun\xe7\xe3o for diferente de get() ent\xe3o dever\xe1 passar o nome da fun\xe7\xe3o junto a chamada.\n                                            Ex: http://127.0.0.1:5555/Examples/NomeFuncao/?id=1\n\n                                            get(callback) {\n                                                this.Example.findBy({\"id\": this.query.id}).\n                                                    //Este m\xe9todo corresponde ao seguinte sql:\n                                                    // SELECT * FROM Example WHERE id = 1;\n                                                    then(res => {\n                                                        this.logger.info(res);\n                                                        //Retorna a resposta para o front end.\n                                                        callback(this.responseSuccess(res));\n                                                    }).\n                                                    catch(err => {\n                                                        this.statusCode = 500;\n                                                        this.logger.error(err.message)\n                                                        callback(this.responseError(\"Erro\", err.message, this.statusCode));\n                                                    });\n                                            }\n                                        }\n\n                                        module.exports = ExamplesController;\n                                    "))),r.a.createElement("div",{id:"controllerFindAll"},r.a.createElement("h5",null,"FindAll()"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para buscar todos os registros da base de dados"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        get(callback) {\n                                            this.Example.findAll().\n                                                //Este m\xe9todo corresponde ao seguinte sql:\n                                                // SELECT * FROM Example;\n                                                then(res => {\n                                                    this.logger.info(res);\n                                                    //Retorna a resposta para o front end.\n                                                    callback(this.responseSuccess(res));\n                                                }).\n                                                catch(err => {\n                                                    this.statusCode = 500;\n                                                    this.logger.error(err.message);\n                                                    callback(this.responseError("Erro", err.message, this.statusCode));\n                                                });\n                                        }\n                                    '))),r.a.createElement("div",{id:"controllerFindAllParams"},r.a.createElement("h5",null,"FindAll(parametros)"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para buscar todos os registros da base de dados"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        get(callback) {\n                                            //Com parametros;\n                                            const params = {\n                                                "conditions": [{\n                                                    "user_id": this.query.user_id\n                                                },{\n                                                    "name": this.query.name,\n                                                }]\n                                            }\n\n                                            //Fazendo buscas pelo nome;\n                                            const params = {\n                                                "conditions": [{\n                                                    "name": \'%\' + this.query.name + \'%\',\n                                                    "operation": "ILIKE"\n                                                }],\n                                            }\n\n                                            //Order, Group, Limit;\n                                            const params = {\n                                                "conditions": [{\n                                                    "name": \'%\' + this.query.name + \'%\',\n                                                    "operation": "ILIKE"\n                                                }],\n                                                "order": ["name", "id"],\n                                                "group": ["name"],\n                                                "limit": "10",\n                                            }\n\n                                            this.Example.findAll(params).\n                                                then(res => {\n                                                    this.logger.info(res);\n                                                    //Retorna a resposta para o front end.\n                                                    callback(this.responseSuccess(res));\n                                                }).\n                                                catch(err => {\n                                                    this.statusCode = 500;\n                                                    this.logger.error(err.message);\n                                                    callback(this.responseError("Erro", err.message, this.statusCode));\n                                                });\n                                        }\n                                    '))),r.a.createElement("div",{id:"controllerFindAllParams"},r.a.createElement("h5",null,"FindAll com join"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para buscar os registros da base de dados com join"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        get(callback) {\n                                            const params = {\n                                                "conditions": {\n                                                    "user_id": this.query.user_id\n                                                },\n                                                "join": {\n                                                    //Tipo do join(INNER, LEFT);\n                                                    "INNER": {\n                                                        "table": "tableexample",\n                                                        "on": "tableexample.example_id = example.id"\n                                                    }\n                                                },\n                                                "fields": ["tableexample.*", "example.id AS example_id, example.name"]\n                                            }\n\n                                            this.Example.findAll(params).\n                                                then(res => {\n                                                    this.logger.info(res);\n                                                    //Retorna a resposta para o front end.\n                                                    callback(this.responseSuccess(res));\n                                                }).\n                                                catch(err => {\n                                                    this.statusCode = 500;\n                                                    this.logger.error(err.message);\n                                                    callback(this.responseError("Erro", err.message, this.statusCode));\n                                                });\n                                        }\n                                    '))),r.a.createElement("div",{id:"controllerSave"},r.a.createElement("h5",null,"Save()"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para salvar um registro da base de dados"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        post(callback) {\n                                            this.Example.Save(this.payload).\n                                                then(res => {\n                                                    this.logger.info(res);\n                                                    //Retorna a resposta para o front end.\n                                                    callback(this.responseSuccess(res));\n                                                }).\n                                                catch(err => {\n                                                    this.statusCode = 500;\n                                                    this.logger.error(err.message);\n                                                    callback(this.responseError("Erro", err.message, this.statusCode));\n                                                });\n                                        }\n                                    '))),r.a.createElement("div",{id:"controllerSave"},r.a.createElement("h5",null,"Update()"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para buscar atualizar um registro da base de dados"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        put(callback) {\n                                            this.Example.Update(this.payload, {"id": this.id}).\n                                                then(res => {\n                                                    this.logger.info(res);\n                                                    //Retorna a resposta para o front end.\n                                                    callback(this.responseSuccess(res));\n                                                }).\n                                                catch(err => {\n                                                    this.statusCode = 500;\n                                                    this.logger.error(err.message);\n                                                    callback(this.responseError("Erro", err.message, this.statusCode));\n                                                });\n                                        }\n                                    '))),r.a.createElement("div",{id:"controllerDelete"},r.a.createElement("h5",null,"Delete()"),r.a.createElement("p",{className:"text-secondary"},"M\xe9todo usado para excluir um registro da base de dados"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        delete(callback) {\n                                            this.Example.Delete({"id": this.payload.id}).\n                                                then(res => {\n                                                    this.logger.info(res.rows);\n                                                    //Retorna a resposta para o front end.\n                                                    callback(this.responseSuccess(res.rows));\n                                                }).\n                                                catch(err => {\n                                                    this.statusCode = 500;\n                                                    this.logger.error(err.message);\n                                                    callback(this.responseError("Erro", err.message, this.statusCode));\n                                                });\n                                        }\n                                    '))),r.a.createElement("div",{id:"model"},r.a.createElement("h5",null,"Sobrescrevendo o m\xe9todo findAll()"),r.a.createElement("p",{className:"text-secondary"},"Na model pode sobrescrever algum m\xe9todo pad\xe3o ou criar um novo."),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},"\n                                        'use strict';\n                                        var AppModel = require('vmagic/AppModel');\n                                        \n                                        class Example extends AppModel {\n                                            init() {\n                                                this.useTable = 'example';\n                                                //\xc9 necess\xe1rio que instancie o component PgSQL para poder sobrescrever o m\xe9todo.\n                                                this.pgsql = this.component('PgSQL');\n                                            }\n\n                                            findAll() {\n                                                const that = this;\n                                        \n                                                return new Promise((resolve, reject) => {\n                                                    const sql = \"select * from example\";\n                                        \n                                                    this.pgsql.connect().\n                                                        then(connection => {\n                                                            connection.query(\n                                                                sql, [],\n                                                                function (err, res) {\n                                                                    that.pgsql.close(connection);\n                                                                    if (err) {\n                                                                        reject(err);\n                                                                    } else {\n                                                                        resolve(res);\n                                                                    }\n                                                                }\n                                                            );\n                                                        }).\n                                                        catch(err => {\n                                                            reject(err);\n                                                        });\n                                                });\n                                            }\n\n                                        }\n\n                                        module.exports = Example;\n                                    ")),r.a.createElement("h5",null,"Sobrescrevendo o m\xe9todo findBy()"),r.a.createElement("pre",{className:"bg-dark"},r.a.createElement("code",{className:"text-white"},'\n                                        findBy(id) {\n                                            const that = this;\n\n                                            return new Promise((resolve, reject) => {\n                                                const sql = "SELECT * FROM example WHERE id = $1";\n                                    \n                                                this.pgsql.connect().\n                                                    then(connection => {\n                                                        connection.query(\n                                                            sql, [id],\n                                                            function (err, res) {\n                                                                that.pgsql.close(connection);\n                                                                if (err) {\n                                                                    reject(err);\n                                                                } else {\n                                                                    resolve(res);\n                                                                }\n                                                            }\n                                                        );\n                                                    }).\n                                                    catch(err => {\n                                                        reject(err);\n                                                    });\n                                            });\n                                        }\n                                    ')))),r.a.createElement(f.a,{href:"#home",className:"btn btn-secondary backToTop"},r.a.createElement(x.a,{size:50,color:"#220052",title:"Voltar ao topo"}))))}}]),a}(n.Component),y=N,k=v,C=function(e){function a(){return Object(l.a)(this,a),Object(i.a)(this,Object(m.a)(a).apply(this,arguments))}return Object(d.a)(a,e),Object(c.a)(a,[{key:"render",value:function(){return r.a.createElement(p.a,null,r.a.createElement("div",null,r.a.createElement(u.a,{exact:!0,path:"/",component:y}),r.a.createElement(u.a,{exact:!0,path:"/pgsql",component:k})))}}]),a}(n.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(C,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}},[[23,1,2]]]);
//# sourceMappingURL=main.bb83938a.chunk.js.map